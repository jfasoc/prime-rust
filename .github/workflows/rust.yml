name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Build
      run: cd next_prime_finder && cargo build --verbose

    - name: Run tests
      run: cd next_prime_finder && cargo test --verbose

    - name: Check formatting
      run: cd next_prime_finder && cargo fmt -- --check

    - name: Run Clippy
      run: cd next_prime_finder && cargo clippy -- -D warnings

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Install grcov
        run: cargo install grcov
      - name: Install lcov
        run: sudo apt-get update && sudo apt-get install -y lcov
      - name: Run tests with coverage
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "cargo-test-%p-%m.profraw"
        run: cd next_prime_finder && cargo test --verbose
      - name: Generate coverage report
        working-directory: ./next_prime_finder
        run: |
          grcov . \
            -s . \
            --binary-path ./target/debug/ \
            -t lcov \
            --branch \
            --ignore-not-existing \
            -o ../lcov.info
      - name: Filter coverage report
        run: lcov --remove lcov.info '*/.cargo/registry/src/*' -o lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          fail_ci_if_error: true
